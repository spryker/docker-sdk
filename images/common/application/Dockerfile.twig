# syntax = docker/dockerfile:experimental
ARG SPRYKER_PLATFORM_IMAGE=spryker/php:8.2
ARG SPRYKER_NODE_IMAGE_VERSION
ARG SPRYKER_NODE_IMAGE_DISTRO
ARG SPRYKER_NODE_IMAGE

FROM ${SPRYKER_NODE_IMAGE} AS node

ARG SPRYKER_NPM_VERSION

# Temporarily switch to HTTP for Alpine repositories to bootstrap ca-certificates
RUN sed -i 's/https:\/\/dl-cdn.alpinelinux.org/http:\/\/dl-cdn.alpinelinux.org/g' /etc/apk/repositories \
&& apk add --no-cache ca-certificates \
&& sed -i 's/http:\/\/dl-cdn.alpinelinux.org/https:\/\/dl-cdn.alpinelinux.org/g' /etc/apk/repositories

COPY . /tmp/
RUN if [ -f /tmp/certs-system.crt ]; then \
      cp /tmp/certs-system.crt /usr/local/share/ca-certificates/host-certs.crt && \
      update-ca-certificates; \
    fi

ENV NODE_EXTRA_CA_CERTS=/usr/local/share/ca-certificates/host-certs.crt
RUN npm config set cafile /usr/local/share/ca-certificates/host-certs.crt \
&& npm install -g npm@${SPRYKER_NPM_VERSION}

FROM ${SPRYKER_PLATFORM_IMAGE} AS application-basic

ENV SPRYKER_IN_DOCKER=1
ENV COMPOSER_IGNORE_CHROMEDRIVER=1

# PHP-FPM environment variables
ENV PHP_FPM_PM=dynamic
ENV PHP_FPM_PM_MAX_CHILDREN=4
ENV PHP_FPM_PM_START_SERVERS=2
ENV PHP_FPM_PM_MIN_SPARE_SERVERS=1
ENV PHP_FPM_PM_MAX_SPARE_SERVERS=2
ENV PHP_FPM_PM_MAX_REQUESTS=500
ENV PHP_FPM_REQUEST_TERMINATE_TIMEOUT=1m

{% for envName, envValue in _envs %}
ENV {{ envName }}='{{ envValue }}'
{% endfor %}

WORKDIR /data

# Create log directory
ARG SPRYKER_LOG_DIRECTORY
ENV SPRYKER_LOG_DIRECTORY=${SPRYKER_LOG_DIRECTORY}
RUN mkdir -p ${SPRYKER_LOG_DIRECTORY} && \
chown spryker:spryker ${SPRYKER_LOG_DIRECTORY}

# Creates the list of known hosts
ARG KNOWN_HOSTS
RUN mkdir -p /home/spryker/.ssh && chmod 0700 /home/spryker/.ssh
RUN bash -c '[ ! -z "${KNOWN_HOSTS}" ] && ssh-keyscan -t rsa ${KNOWN_HOSTS} >> /home/spryker/.ssh/known_hosts || true'
RUN chown spryker:spryker -R /home/spryker/.ssh

# PHP configuration
COPY php/php-fpm.d/worker.conf /usr/local/etc/php-fpm.d/worker.conf
RUN bash -c "php -r 'exit(PHP_VERSION_ID > 70400 ? 1 : 0);' && sed -i '' -e 's/decorate_workers_output/;decorate_workers_output/g' /usr/local/etc/php-fpm.d/worker.conf || true"
COPY php/php.ini /usr/local/etc/php/
COPY php/conf.d/90-opcache.ini /usr/local/etc/php/conf.d
# removing default opcache.ini
RUN rm -f /usr/local/etc/php/conf.d/opcache.ini

{% if _phpExtensions is defined and _phpExtensions is not empty %}
{% for phpExtention in _phpExtensions %}
RUN mv /usr/local/etc/php/disabled/{{phpExtention}}.ini /usr/local/etc/php/conf.d/90-{{phpExtention}}.ini
{% endfor %}
{% endif %}

COPY php/conf.d/99-from-deploy-yaml-php.ini /usr/local/etc/php/conf.d/

# Jenkins
COPY --chown=spryker:spryker jenkins/jenkins.docker.xml.twig /home/spryker/jenkins.docker.xml.twig

# Build info
COPY --chown=spryker:spryker php/build.php /home/spryker/build.php

# NodeJS + NPM
COPY --from=node /usr/lib /usr/lib
COPY --from=node /usr/local/share /usr/local/share
COPY --from=node /usr/local/lib /usr/local/lib
COPY --from=node /usr/local/include /usr/local/include
COPY --from=node /usr/local/bin /usr/local/bin
