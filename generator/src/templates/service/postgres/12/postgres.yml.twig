  {{ serviceName }}:
    image: postgres:12-alpine
    networks:
      - private
    labels:
      'spryker.app.name': database
      'spryker.app.type': services
      'spryker.project': ${SPRYKER_DOCKER_PREFIX}:${SPRYKER_DOCKER_TAG}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: "{{ serviceData['root']['username'] }}"
      POSTGRES_PASSWORD: "{{ serviceData['root']['password'] }}"
{% if project['docker']['ssl']['strict'] | default(false) %}
      PGSSLMODE:         "verify-ca"
      SSLROOTCERT:     "/etc/postgresql/certs/ca.crt"
{% endif %}
    volumes:
      - {{ serviceName }}-{{ serviceData['engine'] }}-data:/var/lib/postgresql/data:rw
{% if project['docker']['ssl']['strict'] | default(false) %}
          - ./${DEPLOYMENT_PATH}/spryker_ca.crt:/etc/postgresql/certs/spryker_ca.crt:ro
          - ./${DEPLOYMENT_PATH}/ssl.crt:/etc/postgresql/certs/ssl.crt:ro
          - ./${DEPLOYMENT_PATH}/ssl.key:/etc/postgresql/certs/ssl.key:ro
    command:
      - postgres
      - -c ssl=on
      - -c ssl_cert_file=/etc/postgresql/certs/server.crt
      - -c ssl_key_file=/etc/postgresql/certs/server.key
      - -c ssl_ca_file=/etc/postgresql/certs/ca.crt
{% endif %}
